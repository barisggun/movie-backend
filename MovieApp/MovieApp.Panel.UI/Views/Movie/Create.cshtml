@model MovieApp.EntityLayer.Entities.Movie

@{
    ViewData["Title"] = "Film Oluştur";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Create</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @*      <div class="form-group">
            <label asp-for="ID" class="control-label"></label>
            <input asp-for="ID" class="form-control" />
            <span asp-validation-for="ID" class="text-danger"></span>
            </div>*@

            <div class="form-group">
                <label for="actorSelect">Oyuncu Seç</label>
                <div class="dropdown actor-dropdown">
                    <input type="text" id="searchBox" class="form-control" placeholder="Ara">
                    <div class="dropdown-menu ">
                        @foreach (var actor in ViewBag.Actors)
                        {
                            <a class="dropdown-item" href="#" data-value="@actor.Value">@actor.Text</a>
                        }
                    </div>
                </div>
            </div>
            @*<button type="button" class="btn btn-primary" id="addActorButton">Ekle</button>*@

            <!-- Seçilen oyuncuların listesi -->
            <ul id="actorList" class="list-group mt-3"></ul>

            <div class="form-group">
                <label for="categorySelect">Kategori Seç</label>
                <select id="categorySelect" name="selectedCategoryIds" class="form-control">
                    <option value="">Seç</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.Value">@category.Text</option>
                    }
                </select>
            </div>
            <button type="button" class="btn btn-primary" id="addCategoryButton">Ekle</button>

            <ul id="categoryList" class="list-group mt-3"></ul>



            <div class="form-group">
                <label for="directorSelect">Yönetmen Seç</label>
                <select id="directorSelect" name="selectedDirectorIds" class="form-control" multiple>
                    @foreach (var director in ViewBag.Directors)
                    {
                        <option value="@director.Value">@director.Text</option>
                    }
                </select>
            </div>


            <div class="form-group mt-3">
                <label asp-for="MovieTitle" class="control-label"></label>
                <input asp-for="MovieTitle" class="form-control" />
                <span asp-validation-for="MovieTitle" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <label asp-for="TrailerUrl" class="control-label"></label>
                <input asp-for="TrailerUrl" class="form-control" />
                <span asp-validation-for="TrailerUrl" class="text-danger"></span>
            </div>

            @*<div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>*@
@*
             <div class="form-group">
                <label asp-for="Directors" class="control-label"></label>
                <select asp-for="Directors" class="form-control" asp-items="ViewBag.Directors"></select>
                <span asp-validation-for="Directors" class="text-danger"></span>
            </div>*@

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Poster">Poster</label>
                <input type="file" name="file" multipe="false" class="form-control file-upload-default">
                <span asp-validation-for="Poster" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="DetailPoster">Detay Poster</label>
                <input type="file" name="file" multipe="false" class="form-control file-upload-default">
                <span asp-validation-for="DetailPoster" class="text-danger"></span>
            </div>
          @*  <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <input asp-for="CategoryId" class="form-control" />
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $(".dropdown-menu").hide(); // Sayfa yüklendiğinde dropdown menüleri gizle
    });

    // Oyuncu listesi açıldığında arama kutusunu göster ve liste aktif olsun
    $(document).on("click", "#searchBox", function () {
        $("#searchBox").val("").focus();
        $(".actor-dropdown .dropdown-menu").show(); // Sadece oyuncu dropdown menüsünü göster
    });

    // Arama kutusuna her karakter girildiğinde filtreleme işlevi
    $(document).on("input", "#searchBox", function () {
        var filter, items, i, txtValue;
        filter = $(this).val().toUpperCase();
        items = $(".actor-dropdown .dropdown-menu a");
        for (i = 0; i < items.length; i++) {
            txtValue = items[i].textContent || items[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                items[i].style.display = "";
            } else {
                items[i].style.display = "none";
            }
        }
    });

    // Seçilen oyuncuyu listeye ekle
    $(document).on("click", ".dropdown-item", function (e) {
        e.preventDefault();
        var selectedActorId = $(this).data("value");
        var selectedActorName = $(this).text();

        if (selectedActorId && selectedActorName) {
            var actorList = document.getElementById("actorList");
            var listItem = document.createElement("li");
            listItem.classList.add("list-group-item");
            listItem.textContent = selectedActorName;
            listItem.innerHTML += '<input type="hidden" name="selectedActorIds" value="' + selectedActorId + '">';
            actorList.appendChild(listItem);

            // Seçilen oyuncuyu listeden çıkar
            $(this).hide();
        }
    });
    $(document).on("click", "#actorList li", function () {
        var selectedActorId = $(this).find("input[name='selectedActorIds']").val();
        if (selectedActorId) {
            $(this).remove();
            // Çıkarılan oyuncuyu tekrar seçebilmek için dropdown listesini göster
            $(".dropdown-item[data-value='" + selectedActorId + "']").show();
        }
    });

    // Sayfanın herhangi bir yerine tıkladığımızda dropdown menüyü gizle
    $(document).on("click", function (e) {
        if (!$(e.target).closest(".actor-dropdown").length) {
            $(".actor-dropdown .dropdown-menu").hide(); // Oyuncu dropdown menüsü haricindeki diğer dropdown menüleri gizle
        }
    });
    //// Seçilen oyuncuyu listeye ekle
    //document.getElementById("addActorButton").addEventListener("click", function () {
    //    var selectElement = document.getElementById("actorSelect");
    //    var selectedActorId = selectElement.value;
    //    var selectedActorName = selectElement.options[selectElement.selectedIndex].text;

    //    if (selectedActorId && selectedActorName) {
    //        var actorList = document.getElementById("actorList");
    //        var listItem = document.createElement("li");
    //        listItem.classList.add("list-group-item");
    //        listItem.textContent = selectedActorName;
    //        listItem.innerHTML += '<input type="hidden" name="selectedActorIds" value="' + selectedActorId + '">';
    //        actorList.appendChild(listItem);

    //        selectElement.value = "";
    //    }
    //});


    document.getElementById("addCategoryButton").addEventListener("click", function () {
        var selectElement = document.getElementById("categorySelect");
        var selectedCategoryId = selectElement.value;
        var selectedCategoryName = selectElement.options[selectElement.selectedIndex].text;

        if (selectedCategoryId && selectedCategoryName) {
            var categoryList = document.getElementById("categoryList");
            var listItem = document.createElement("li");
            listItem.classList.add("list-group-item");
            listItem.textContent = selectedCategoryName;
            listItem.innerHTML += '<input type="hidden" name="selectedCategoryIds" value="' + selectedCategoryId + '">';
            categoryList.appendChild(listItem);

            selectElement.value = "";
        }
    });
</script>