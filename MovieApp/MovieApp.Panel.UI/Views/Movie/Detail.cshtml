@model MovieDetailModel

@{
    ViewData["Title"] = "Movie";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@*<div style="background-image: linear-gradient( 33deg, #1a1a1a 24.97%, #1a1a1a 38.3%, rgba(26, 26, 26, 0.0409746) 97.47%, #1a1a1a 100% ), url(/images/movie/@Model.MovieDetailPoster);
     background-repeat: no-repeat;
     width: 1066px;
     height: 700px;
     background-position: top;
     margin: 0 auto;
     margin-bottom: 80px;">*@

<div style="@ViewBag.GifStyle
     background-repeat: no-repeat;
     background-size: cover;
     width: 1066px;
     height: 800px;
     background-position: center;
     margin: 0 auto 45px auto;">

    <div class="movieDetail">
        <div>
            <img src="~/images/movie/@Model.MoviePoster"
                 class="avengersPoster"
                 alt="MoonLight Poster" />
        </div>
        <div class="movieTitleDetails">
            <h1>@Model.MovieTitle</h1>
            <p>
                @Model.MovieDescription
            </p>
            <br />
            <div class="director">
                Yönetmen: @foreach (var directorName in Model.DirectorNames)
                {
                    <span>@directorName</span>
                }
            </div>
            <div class="director">
                Oyuncular : @foreach (var actorName in Model.Actors)
                {
                        <a href="/Movie/MoviesByActors?Id=@actorName.ID">@actorName.ActorName </a>
                }
            </div>
            <div class="director">
                Kategori : @foreach (var categoryName in Model.CategoryNames)
                {
                    <span>@categoryName |</span>
                }
            </div>
            <div class="director">
                Çıkış Tarihi: @(((DateTime)
                Model.ReleaseDate).ToString("dd-MMM-yyyy"))
            </div>
            <div class="star-wrapper">
                <a href="#" class="fas fa-star s5 @(Model.UserRating >= 5 ? "selected" : " ")" id="s5" onclick="rate(5)"></a>
                <a href="#" class="fas fa-star s4 @(Model.UserRating >= 4 ? "selected" : " ")" id="s4" onclick="rate(4)"></a>
                <a href="#" class="fas fa-star s3 @(Model.UserRating >= 3 ? "selected" : " ")" id="s3" onclick="rate(3)"></a>
                <a href="#" class="fas fa-star s2 @(Model.UserRating >= 2 ? "selected" : " ")" id="s2" onclick="rate(2)"></a>
                <a href="#" class="fas fa-star s1 @(Model.UserRating >= 1 ? "selected" : " ")" id="s1" onclick="rate(1)"></a>
            </div>
 


            
            
            <div class="director">
                <h4> Ortalama Puan: @Model.AverageRating </h4>
            </div>
           @* <div id="notification-container" class="@TempData["NotificationType"]">
                @TempData["NotificationMessage"]
            </div>*@

            <div class="wraper"></div>
            <br />
            <div>
                <a href="#" class="addMyWatch @(Model.IsMovieAdded != false ? "watchlist-button" : "")" style="margin-left:0px !important;" onclick="toggleWatchList(); return false;">
                    <img src="~/main/assets/img/png/addIcon.png" alt="" class="addIcon" />
                    <span class="text addToWatchList">İzleyeceklerime Ekle</span>
                </a>

                <a href="#" class="addToWatch @(Model.IsMovieAddedToWatchedList != false ? "watchedlist-button" : "")" style="margin-left:0px !important;" onclick="toggleWatchedList(); return false;">
                    <img src="~/main/assets/img/png/favIcon.png" alt="" class="addIcon" />
                    <span class="text addToWatchedList">İzlenenlere Ekle</span>
                </a>

            </div>
            <br />
         @*   <div id="notification-container2" class="@TempData["NotificationType"]">
                @TempData["NotificationMessage"]
            </div>
            <div id="notification-container3" class="@TempData["NotificationType"]">
                @TempData["NotificationMessage"]
            </div>*@
        </div>
        
    </div>
</div>

<div style="width:1066px;margin:0 auto;">

    <style>
        .codegena {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 56.27198%;
        }

            .codegena iframe {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
        </style>
        <div class="codegena"><iframe width='1066' height='800' src="https://www.youtube.com/embed/@Model.TrailerUrl?&theme=dark&autoplay=1&autohide=1&modestbranding=1&fs=0&showinfo=0&rel=0" frameborder="0"></iframe></div><div style='font-size: 0.8em'></div>

</div>

<br />
<br />
<br />
@await Html.PartialAsync("~/Views/Comment/AddComment.cshtml")
<div id="commentComponentContainer">
    @await Component.InvokeAsync("MovieComments", new{id=ViewBag.i})
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://kit.fontawesome.com/5ea815c1d0.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .watchlist-button {
        background-color: #67D449;
    }

        .watchlist-button:hover {
            background-color: #EA7D62;
        }

    .watchedlist-button {
        background-color: #67D449;
    }

        .watchedlist-button:hover {
            background-color: #EA7D62;
        }
</style>

<script>
    function toggleWatchList() {
        var movieId = @Model.MovieId;
        var addButton = $('.addMyWatch');
        var buttonText = $('.addToWatchList');

        if (addButton.hasClass('watchlist-button')) {
            removeMovieList(movieId, addButton, buttonText);
        } else {
            addMovieList(movieId, addButton, buttonText);
        }
        return false;
    }

    function toggleWatchedList() {
        var movieId = @Model.MovieId;
        var addButton = $('.addToWatch');
        var buttonText = $('.addToWatchedList');

        if (addButton.hasClass('watchedlist-button')) {
            RemoveFromWatchedList(movieId, addButton, buttonText);
        } else {
            addMovieWatchedList(movieId, addButton, buttonText);
        }
        return false;
    }

    function addMovieList(movieId, addButton, buttonText) {
        $.ajax({
            url: '/Movie/AddWatchList',
            type: 'POST',
            data: { movieId: movieId },
            success: function (response) {
                if (response.success) {
                    toastr.success('İzleme listesine başarıyla eklendi!', '', { positionClass: 'toast-bottom-right' });
                    addButton.addClass('watchlist-button');
                    buttonText.text('İzleme listemde');
                } else {
                    $('#notification-container2').text('Zaten bu film izleme listenizde');
                    $('#notification-container2').addClass('error');
                }
            },
            error: function () {
                //$('#notification-container2').text('Filmi listenize eklemeniz için giriş yapmalısınız.');
                //$('#notification-container2').addClass('error');
                toastr.error('İzleme listenize eklemek için giriş yapmanız gerekli.', '', { positionClass: 'toast-bottom-right' });
            }
        });
    }

    function removeMovieList(movieId, addButton, buttonText) {
        $.ajax({
            url: '/Movie/RemoveFromWatchList',
            type: 'POST',
            data: { movieId: movieId },
            success: function (response) {
                if (response.success) {
                    toastr.success('İzleme listenizden başarıyla kaldırıldı!', '', { positionClass: 'toast-bottom-right' });
                    addButton.removeClass('watchlist-button');
                    buttonText.text('İzleme listesine ekle');
                } else {
                    $('#notification-container2').text('Film, izleme listenizde bulunamadı.');
                    $('#notification-container2').addClass('error');
                }
            },
            error: function () {
                $('#notification-container2').text('Filmi listenizden kaldırabilmeniz için giriş yapmalısınız.');
                $('#notification-container2').addClass('error');
            }
        });
    }

    function addMovieWatchedList(movieId, addButton, buttonText) {
        $.ajax({
            url: '/Movie/AddWatchedList',
            type: 'POST',
            data: { movieId: movieId },
            success: function (response) {
                if (response.success) {
                    toastr.success('İzlenenlere başarıyla eklendi!', '', { positionClass: 'toast-bottom-right' });
                    addButton.addClass('watchedlist-button');
                    buttonText.text('İzlediklerimde');
                } else {
                    $('#notification-container3').text('Zaten bu film izledikleriniz arasında.');
                    $('#notification-container3').addClass('error');
                }
            },
            error: function () {
                toastr.error('İzleme listenize eklemek için giriş yapmanız gerekli.', '', { positionClass: 'toast-bottom-right' });
            }
        });
    }

    function RemoveFromWatchedList(movieId, addButton, buttonText) {
        $.ajax({
            url: '/Movie/RemoveFromWatchedList',
            type: 'POST',
            data: { movieId: movieId },
            success: function (response) {
                if (response.success) {
                    toastr.success('İzlediklerimden başarıyla kaldırıldı!', '', { positionClass: 'toast-bottom-right' });
                    addButton.removeClass('watchedlist-button');
                    buttonText.text('İzlenenlere Ekle');
                } else {
                    $('#notification-container3').text('Film, izledikleriniz arasında bulunamadı.');
                    $('#notification-container3').addClass('error');
                }
            },
            error: function () {
                $('#notification-container3').text('Filmi listenizden kaldırabilmeniz için giriş yapmalısınız.');
                $('#notification-container3').addClass('error');
            }
        });
    }

    function rate(score) {
        var movieId = @Model.MovieId;
        var userRating = @Model.UserRating;

        $.ajax({
            url: '/Movie/SaveRating',
            type: 'POST',
            data: { movieId: movieId, score: score },
            success: function (response) {
                if (response.success) {
                    var averageRating = response.averageRating;
                    toastr.success('Oyunuz başarıyla kaydedildi', '', { positionClass: 'toast-bottom-right' });
                    //$('#notification-container').text('Oyunuz başarıyla kaydedildi.');
                    //$('#notification-container').addClass('success');
                    $('.director h4').text('Ortalama Puan: ' + averageRating);

                    for (var i = 1; i <= 5; i++) {
                        if (i <= score) {
                            $('.star-wrapper .s' + i).addClass('selected');
                        } else {
                            $('.star-wrapper .s' + i).removeClass('selected');
                        }
                    }
                } else {
                    $('#notification-container').text('Zaten bu filme oy verdiniz.');
                    $('#notification-container').addClass('error');
                }
            },
            error: function () {
                toastr.error('Filme puan vermek için giriş yapmalısınız', '', { positionClass: 'toast-bottom-right' });
                //$('#notification-container').text('Filme oy vermek için giriş yapmalısınız.');
                //$('#notification-container').addClass('error');
            }
        });
    }
</script>