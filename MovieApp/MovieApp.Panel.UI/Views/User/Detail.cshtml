@using MovieApp.EntityLayer.Entities
@model UserProfileModel

@{
    ViewData["Title"] = Model.NameSurname;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}


<div class="BlogDetailBanner" style="background-image:linear-gradient( to bottom, transparent, rgb(0, 0, 0) ), url(/images/profile/@Model.ImageUrl);">
    <div class="profilePicture">
        <img src="/images/profile/@Model.ProfileImageUrl"
             alt="Profil Fotoğrafı"
             class="profilIcon" />
        <div class="userInfo">
            <h5 class="nameAndSurname">@Model.NameSurname</h5>
            <h6 class="userRole">@Model.UserRole</h6>
            @if (User.Identity.Name == Model.UserName)
            {
                <a href="/User/Edit/@Model.UserID" style="color:white;">Profili düzenle</a>
            }
            <p id="modal1" class="userList">İzleme Listem &nbsp;<i class="fa-solid fa-list"></i></p>
            <p id="modal2" class="userList">İzlediklerim &nbsp;<i class="fa-solid fa-check"></i></p>
        </div>
    </div>
    <!-- Trigger/Open The Modal -->
    <!-- The Modal -->

    @await Component.InvokeAsync("WatchList", new { Id = Model.UserID})
    @await Component.InvokeAsync("WatchedList", new { Id = Model.UserID})

</div>
<div class="content">
    <h1>Hakkımda</h1>
    <p>@Model.About</p>
</div>

@await Component.InvokeAsync("ProfileLastComments", new { Id = Model.UserID })

<script src="~/main/assets/JS/main.js"></script>